server.port=8080
# log
logging.file=/data/logs/springboot1-learn/application.log

#spring.datasource.driverClassName=ru.yandex.clickhouse.ClickHouseDriver
#spring.datasource.url=jdbc:clickhouse://10.4.5.138:8123/NTA_DB
#spring.datasource.username=default
#spring.datasource.password=swad@clickhouse

spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/spring_test?prepStmtCacheSize=517&cachePrepStmts=true&autoReconnect=true&characterEncoding=utf-8&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=false
spring.jpa.show-sql=true

#
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#
## 初始化大小，最小，最大  
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间  
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒  
#spring.datasource.minEvictableIdleTimeMillis=300000
## 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用  
#spring.datasource.validationQuery=SELECT 'x'
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小  
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 合并多个DruidDataSource的监控数据  
#spring.datasource.useGlobalDataSourceStat=true


# Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0

# 自己写的配置
project.version=v1.0.0
project.name=proper测试

# kafka的配置
spring.kafka.producer.bootstrap-servers:node0:9092

#原始数据kafka读取
kafka.consumer.servers=192.168.33.135:9092
kafka.consumer.enable.auto.commit=true
kafka.consumer.session.timeout=20000
kafka.consumer.auto.commit.interval=100
#实时生产，实时消费，不会从头开始消费
kafka.consumer.auto.offset.reset=latest
kafka.consumer.topic=test
kafka.consumer.group.id=test
kafka.consumer.concurrency=10
 
#协议转换后存储kafka
kafka.producer.servers=192.168.33.135:9092
kafka.producer.topic=test
kafka.producer.retries=0
kafka.producer.batch.size=4096
kafka.producer.linger=1
kafka.producer.buffer.memory=40960

